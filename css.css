@charset "utf-8";
@import url("https://fonts.googleapis.com/css?family=VT323&display=swap");

html, body {
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    background-color: black;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
}

.monitor {
    margin: 3vmin auto;
    padding: 5.5vmin 5.5vmin 3.5vmin 5.5vmin;
    width: min-content;
    display: flex;
    flex-direction: column;
    align-items: center;
    background: #3f3933;
    border-radius: 0.5rem;
}

.screen {
    position: relative;
    border: 30px solid transparent;
    border-image-source: url(https://i.ibb.co/8jt98LP/crt-frame.png);
    border-image-slice: 30 fill;
    border-image-outset: 0;
    overflow: hidden;
}

.crt {
    background: #05321e;
    background-image: radial-gradient(ellipse, #05321e 0%, #050505 90%);
    animation: txt-shadow 1.6s infinite;
    width: 80ch;
    height: calc(80ch * 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto;
}

.terminal {
    font-family: "VT323", monospace;
    text-align: left;
    position: relative;
    color: #00fd55;
}

.terminal h1 {
    border-right: .4em solid #00fd55;
    color: #00fd55;
    font-size: 3.5rem;
    overflow: hidden;
    white-space: nowrap;
    animation: typing 11s steps(17, end) infinite, blink-cursor .8s step-end infinite, glitch 10s linear infinite;
}

@keyframes typing {
    0% { width: 0; }
    100% { width: 100%; }
}

@keyframes blink-cursor {
    0% { border-color: transparent; }
    50% { border-color: #00fd55; }
}

@keyframes glitch {
    2%, 64% { transform: translate(2px, 0); }
    4%, 60% { transform: translate(-2px, 0); }
    62% { transform: translate(0, 0) skew(5deg); }
}

.scan-line {
    width: 100%;
    height: 100px;
    z-index: 8;
    background: linear-gradient(0deg, rgba(0, 0, 0, 0) 0%, rgba(255, 255, 255, 0.2) 10%, rgba(0, 0, 0, 0.1) 100%);
    opacity: 0.1;
    position: absolute;
    bottom: 100%;
    pointer-events: none;
    animation: scan-line 10s linear infinite;
}
